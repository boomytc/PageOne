<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ruiLibrary</name>
    </assembly>
    <members>
        <member name="T:rui.dbFactory">
            <summary>
            工厂辅助类
            处理和Core代码差异性
            </summary>
        </member>
        <member name="M:rui.dbFactory.#ctor(System.String)">
            <summary>
            实例化工厂
            </summary>
            <param name="PrividerName">提供程序名称</param>
        </member>
        <member name="M:rui.dbFactory.CreateConnection">
            <summary>
            获取连接对象
            </summary>
            <returns></returns>
        </member>
        <member name="T:rui.dbHelper">
            <summary>
            dbHelper辅助类
            和Core代码共享
            </summary>
        </member>
        <member name="P:rui.dbHelper.dbConn">
            <summary>
            连接对象
            </summary>
        </member>
        <member name="P:rui.dbHelper.dbTran">
            <summary>
            事务对象
            </summary>
        </member>
        <member name="F:rui.dbHelper.isSelfTran">
            <summary>
            是否使用自己的事务对象 - 用于事务控制
            </summary>
        </member>
        <member name="M:rui.dbHelper.getConnStr">
            <summary>
            返回连接串
            </summary>
            <returns></returns>
        </member>
        <member name="M:rui.dbHelper.createHelper(rui.dbHelper)">
            <summary>
            创建dbHelper
            </summary>
            <param name="upHelper">上层方法的dbHelper对象，要实现跨方法事务，需要传入上层方法对象</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbHelper.createCPHelper(rui.dbHelper)">
            <summary>
            创建比较库的dbHelper
            </summary>
            <param name="upHelper">上层方法的dbHelper对象，要实现跨方法事务，需要传入上层方法对象</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbHelper.createI6Helper(rui.dbHelper)">
            <summary>
            创建I6的dbHelper
            </summary>
            <param name="upHelper">上层方法的dbHelper对象，要实现跨方法事务，需要传入上层方法对象</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbHelper.ExecuteList``1(System.String,System.Object)">
            <summary>
            查询返回列表数据
            </summary>
            <typeparam name="T">集合元素类型</typeparam>
            <param name="cmdText">命令文本</param>
            <param name="cmdPara">命令参数，匿名类</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbHelper.ExecuteEntry``1(System.String,System.Object)">
            <summary>
            查询返回单行数据
            </summary>
            <typeparam name="T">结果类型</typeparam>
            <param name="cmdText">命令文本</param>
            <param name="cmdPara">命令参数，匿名类</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbHelper.ExecuteDataTable(System.String,System.Object,System.Data.CommandType)">
            <summary>
            执行查询，并以DataTable离线的方式返回所查询的结果集
            </summary>
            <param name="cmdText">命令文本</param>
            <param name="cmdPara">命令参数</param>
            <param name="cmdType">命令类型</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbHelper.ExecuteDataRow(System.String,System.Object,System.Data.CommandType)">
            <summary>
            执行查询，并以DataRow离线的方式返回所查询的单条记录
            </summary>
            <param name="cmdText">命令文本</param>
            <param name="cmdPara">命令参数</param>
            <param name="cmdType">命令类型</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbHelper.ExecuteScalar(System.String,System.Object,System.Data.CommandType)">
            <summary>
            执行汇总查询
            </summary>
            <param name="cmdText">命令文本</param>
            <param name="cmdPara">命令参数</param>
            <param name="cmdType">命令类型</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbHelper.ExecuteExist(System.String,System.Object,System.Data.CommandType)">
            <summary>
            判断查询是否有结果
            </summary>
            <param name="cmdText">命令文本</param>
            <param name="cmdPara">命令参数</param>
            <param name="cmdType">命令类型</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbHelper.Execute(System.String,System.Object,System.Data.CommandType)">
            <summary>
            执行Sql操作
            </summary>
            <param name="cmdText">命令文本</param>
            <param name="cmdPara">命令参数</param>
            <param name="cmdType">命令类型</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbHelper.Execute(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            批量执行操纵类的Sql语句
            </summary>
            <param name="sqlDic">命令集合</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbHelper.newGuid">
            <summary>
            返回Guid编号
            </summary>
            <returns></returns>
        </member>
        <member name="M:rui.dbHelper.beginTran(System.Data.IsolationLevel)">
            <summary>
            开启事务
            </summary>
        </member>
        <member name="M:rui.dbHelper.commit">
            <summary>
            提交事务
            </summary>
        </member>
        <member name="M:rui.dbHelper.rollBack">
            <summary>
            回滚事务
            </summary>
        </member>
        <member name="M:rui.dbHelper.Dispose">
            <summary>
            对象释放
            如果使用自己的连接对象，则自动释放
            </summary>
        </member>
        <member name="T:rui.autoFacHelper">
            <summary>
            autofac容器的保存工具类
            先采用静态变量保存,可以换成全局变量
            </summary>
        </member>
        <member name="M:rui.autoFacHelper.getHttpContext">
            <summary>
            获取HTTP上下文
            </summary>
            <returns></returns>
        </member>
        <member name="T:rui.commHelper">
            <summary>
            commTools 的摘要说明
            </summary>
        </member>
        <member name="M:rui.commHelper.checkAttack(System.String)">
            <summary>
            检测sql注入特定字符
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:rui.commHelper.getGuid">
            <summary>
            获取一个新的Guid字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:rui.configHelper">
            <summary>
            系统常用配置项目
            处理和Core代码差异性
            </summary>
        </member>
        <member name="M:rui.configHelper.getAppValue(System.String,System.String)">
            <summary>
            获取配置串的值
            </summary>
            <param name="configKey"></param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:rui.configHelper.getConnString(System.String)">
            <summary>
            返回连接串连接值
            </summary>
            <returns></returns>
        </member>
        <member name="M:rui.configHelper.getConnProvider(System.String)">
            <summary>
            返回连接串提供程序
            </summary>
            <returns></returns>
        </member>
        <member name="F:rui.configHelper.va请选择Text">
            <summary>
            请选择显示的内容
            </summary>
        </member>
        <member name="F:rui.configHelper.va请选择Value">
            <summary>
            请选择的Value值
            </summary>
        </member>
        <member name="F:rui.configHelper.dateFormatLang">
            <summary>
            长日期格式
            </summary>
        </member>
        <member name="F:rui.configHelper.dateFormat">
            <summary>
            短日期格式
            </summary>
        </member>
        <member name="F:rui.configHelper.pageSize">
            <summary>
            默认分页大小 - 在appSetting - pageSize
            </summary>
        </member>
        <member name="F:rui.configHelper.pageSizeDlg">
            <summary>
            默认对话框页面分页大小 - 在appSetting - pageSizeDlg
            </summary>
        </member>
        <member name="F:rui.configHelper.pageSizeSelect">
            <summary>
            默认选择界面分页大小 - 在appSetting - pageSizeSelect
            </summary>
        </member>
        <member name="F:rui.configHelper.pageSizeMax">
            <summary>
            最大分页大小
            </summary>
        </member>
        <member name="F:rui.configHelper.isOnline">
            <summary>
            是否上线运行
            true和false
            </summary>
        </member>
        <member name="F:rui.configHelper.prjName">
            <summary>
            运行的项目名称
            </summary>
        </member>
        <member name="F:rui.configHelper.ctxKey">
            <summary>
            前端资源缓存控制
            </summary>
        </member>
        <member name="F:rui.configHelper.adminName">
            <summary>
            系统管理员账号名称，在appSetting - sysAdmin
            </summary>
        </member>
        <member name="F:rui.configHelper.va新增名">
            <summary>
            新增数据的sourceForm名称
            </summary>
        </member>
        <member name="F:rui.configHelper.va外库名">
            <summary>
            导入数据的sourceForm名称，在appSetting - va外库名
            </summary>
        </member>
        <member name="T:rui.dataCheck">
            <summary>
            正则表达式检查数据合法性
            </summary>
        </member>
        <member name="M:rui.dataCheck.check身份证(System.String)">
            <summary>
            检查身份证是否合法
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:rui.dataCheck.check手机号(System.String)">
            <summary>
            检查手机号是否合法
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:rui.dataCheck.checkExpr(System.Boolean,System.String)">
            <summary>
            检查变量值是否等于某个值，等于则抛出异常
            </summary>
            <param name="boolExpr">布尔表达式</param>
            <param name="errorMsg">成立时抛出的错误提醒</param>
        </member>
        <member name="T:rui.excptHelper">
            <summary>
            异常操作
            </summary>
        </member>
        <member name="M:rui.excptHelper.getExMsg(System.Exception)">
            <summary>
            获取异常包含的准确的错误描述信息
            </summary>
            <param name="ex">异常对象</param>
            <returns></returns>
        </member>
        <member name="M:rui.excptHelper.throwEx(System.String)">
            <summary>
            抛出异常
            </summary>
            <param name="msg">异常消息</param>
        </member>
        <member name="T:rui.ruiException">
            <summary>
             业务类中抛出的不合法异常
            </summary>
        </member>
        <member name="M:rui.ruiException.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="msg">异常消息</param>
        </member>
        <member name="T:rui.loginHelper">
            <summary>
            登录检测
            </summary>
        </member>
        <member name="M:rui.loginHelper.checkLogin(System.String,System.String)">
            <summary>
            登录检测
            </summary>
            <param name="userName"></param>
            <param name="userPw"></param>
            <returns></returns>
        </member>
        <member name="M:rui.loginHelper.checkAdmin(System.String)">
            <summary>
            登录重置
            </summary>
            <param name="userName"></param>
        </member>
        <member name="T:rui.objHelper">
            <summary>
            创建对象的辅助方法
            </summary>
        </member>
        <member name="M:rui.objHelper.newOjb``1">
            <summary>
            创建对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <returns></returns>
        </member>
        <member name="T:rui.cookieHelper">
            <summary>
            cookie辅助方法
            </summary>
        </member>
        <member name="M:rui.cookieHelper.saveValue(System.String,System.String,System.DateTime)">
            <summary>
            向Cookie中存入值
            </summary>
            <param name="keyName"></param>
            <param name="value"></param>
            <param name="Expires">过期时间</param>
        </member>
        <member name="M:rui.cookieHelper.getValue(System.String,System.Boolean)">
            <summary>
            获取Cookie中的值
            </summary>
            <param name="keyName"></param>
            <param name="isThrowOnNull"></param>
            <returns></returns>
        </member>
        <member name="M:rui.cookieHelper.hasKey(System.String)">
            <summary>
            判断Cookie中是否有值
            </summary>
            <param name="keyName"></param>
            <returns></returns>
        </member>
        <member name="M:rui.cookieHelper.removeKey(System.String)">
            <summary>
            移除Cookie中存入变量
            </summary>
            <param name="keyName"></param>
        </member>
        <member name="T:rui.requestHelper">
            <summary>
            获取用户的值
            </summary>
        </member>
        <member name="M:rui.requestHelper._getValue_Df(System.String)">
            <summary>
            获取请求key的值
            </summary>
            <param name="key">键值</param>
            <returns></returns>
        </member>
        <member name="M:rui.requestHelper.getValue(System.String,System.Boolean,System.String)">
            <summary>
            返回Request中指定key的值
            如果是表单数组，则返回:a,b,c格式
            </summary>
            <param name="key">请求数据标识</param>
            <param name="isShowError">无该请求数据是否显示错误</param>
            <param name="errorMsg">错误消息内容</param>
            <returns>获取到的值</returns>
        </member>
        <member name="M:rui.requestHelper.getMulValue(System.String,System.Boolean,System.String)">
            <summary>
            获取表单数组的值，如果有值会加上一个,
            格式：a,b,c,
            </summary>
            <param name="key">请求数据标识</param>
            <param name="isShowError">无该请求数据是否显示错误</param>
            <param name="errorMsg">错误提示内容</param>
            <returns></returns>
        </member>
        <member name="M:rui.requestHelper.getList(System.String)">
            <summary>
            获取表单数组的值,返回List数组
            将获取的值拆分成字符串数组
            </summary>
            <param name="name">表单name属性</param>
            <returns>返回的值集合（包含空值）</returns>
        </member>
        <member name="M:rui.requestHelper.getAllKey(System.String)">
            <summary>
            获取客户端请求中包含的所有Key列表
            </summary>
            <param name="entryPreTag">key前缀过滤</param>
            <returns></returns>
        </member>
        <member name="M:rui.requestHelper.isFirstRequest">
            <summary>
            判断列表页面是否左侧导航栏进入的请求 - 用来完成相关默认数据的配置
            判断请求网址中是否包含PageIndex参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:rui.requestHelper.firstNoSearchData(System.String@)">
            <summary>
            第一次进入的时候，不展示查询数据
            如果是第一次请求,给查询语句自动拼接上 and 1!=1 
            </summary>
            <param name="querySql"></param>
        </member>
        <member name="M:rui.requestHelper.isPagerRequest">
            <summary>
            是否分页请求
            分页请求返回TRUE，否则返回FALSE
            判断请求网址中是否不包含exeCountSql
            </summary>
            <returns></returns>
        </member>
        <member name="M:rui.requestHelper.isSearchRequest">
            <summary>
            判断是否搜索操作
            第一次进入和单击搜索都认为是搜索操作
            判断请求网址中是否包含exeCountSql
            </summary>
            <returns></returns>
        </member>
        <member name="M:rui.requestHelper.isAjax">
            <summary>
            判断是否AJAX请求
            </summary>
            <returns></returns>
        </member>
        <member name="M:rui.requestHelper.getRequestBase">
            <summary>
            获取请求基类
            </summary>
            <returns></returns>
        </member>
        <member name="M:rui.requestHelper.isClickSave">
            <summary>
            判断是否工人保存的（自动保存的会附加上auto参数，没有则人工保存的）
            </summary>
            <returns>TRUE人工保存</returns>
        </member>
        <member name="T:rui.jsonResult">
            <summary>
            封装JSON返回结果
            </summary>
        </member>
        <member name="P:rui.jsonResult.data">
            <summary>
            保存需要返回的所有数据
            result 代表请求是否成功
            message 代表请求的提示信息
            </summary>
        </member>
        <member name="M:rui.jsonResult.getAJAXResult(System.String,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            返回操作消息，Ajax请求时用
            </summary>
            <param name="message">返回的message键的值</param>
            <param name="success">返回的success键的值</param>
            <param name="returnDic">附加的其它键值数据</param>
            <returns></returns>
        </member>
        <member name="M:rui.jsonResult.getDicByRowID(System.Object)">
            <summary>
            通过rowID的值返回一个Dictionary，数据新增的时候用
            </summary>
            <param name="rowID">rowID的值</param>
            <returns></returns>
        </member>
        <member name="M:rui.jsonResult.addTable(System.String,System.Data.DataTable)">
            <summary>
            添加DataTable数据
            </summary>
            <param name="keyName">键名</param>
            <param name="dtData">键值：表格的json字符串值</param>
        </member>
        <member name="M:rui.jsonResult.addValue(System.String,System.String)">
            <summary>
            添加key/value数据
            </summary>
            <param name="keyName">键名</param>
            <param name="keyValue">键值</param>
        </member>
        <member name="M:rui.jsonResult.addDic(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            批量添加键值对
            </summary>
            <param name="dic">Dictionary对象</param>
        </member>
        <member name="M:rui.jsonResult.mergeDictionary(System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            合并多个Dictionary
            </summary>
            <param name="dic1">Dictionary对象1</param>
            <param name="dic2">Dictionary对象2</param>
            <returns></returns>
        </member>
        <member name="M:rui.jsonResult.dataTableToJsonStr(System.Data.DataTable)">
            <summary>
            把dataTable 转为 json字符串  下拉框联动用
            必须包含code和Name两个列
            </summary>
            <param name="table">DataTable对象</param>
            <returns></returns>
        </member>
        <member name="M:rui.jsonResult.SelectListToJsonStr(System.Collections.Generic.List{System.Web.Mvc.SelectListItem})">
            <summary>
            把SelectList转换为json字符串  下拉框联动用
            </summary>
            <param name="list">SelectListItem的集合</param>
            <returns></returns>
        </member>
        <member name="T:rui.stringHelper">
            <summary>
            字符串辅助方法
            </summary>
        </member>
        <member name="M:rui.stringHelper.codeNext(System.String,System.Int32)">
            <summary>
            返回下一个可用编码
            </summary>
            <param name="code">原编码</param>
            <param name="NumLength">尾部数字长度</param>
            <returns></returns>
        </member>
        <member name="M:rui.stringHelper.subString(System.Object,System.Int32)">
            <summary>
            取字串
            </summary>
            <param name="value">母串</param>
            <param name="length">子串长度</param>
            <returns>返回子串</returns>
        </member>
        <member name="M:rui.stringHelper.removeLastChar(System.String)">
            <summary>
            去除字符串最后一个字符(主要去除后边的拼接符合)
            </summary>
            <param name="str">字符串值</param>
            <returns>返回处理过之后的字符串</returns>
        </member>
        <member name="M:rui.stringHelper.unionString(System.String,System.String,System.Char)">
            <summary>
            字符串 并集运算
            </summary>
            <param name="val1"></param>
            <param name="val2"></param>
            <param name="splitTag"></param>
            <returns></returns>
        </member>
        <member name="M:rui.stringHelper.exceptString(System.String,System.String,System.Char)">
            <summary>
            字符串 排除元素
            </summary>
            <param name="val1"></param>
            <param name="val2"></param>
            <param name="splitTag"></param>
            <returns></returns>
        </member>
        <member name="M:rui.stringHelper.ToDBC(System.String)">
            <summary>
            全角转半角
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:rui.webDiskHelper">
            <summary>
            文件上传辅助方法
            </summary>
        </member>
        <member name="M:rui.webDiskHelper.getWebPath">
            <summary>
            获取网站部署的绝对路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:rui.webDiskHelper.getAbsolutePath(System.String,System.String)">
            <summary>
            获取物理路径
            </summary>
            <param name="webInnerPath">站内路径(前后需要携带/): 例如 "/download/"</param>
            <param name="fileName">如果路径内没有文件名，则提供文件名</param>
            <returns>物理路径</returns>
        </member>
        <member name="M:rui.webDiskHelper.getInnerPath(System.String,System.String)">
            <summary>
            路径合并返回站内相对路径
            </summary>
            <param name="webInnerPath">站内路径(前后需要携带/): 例如 "/download/"</param>
            <param name="fileName">如果路径内没有文件名，则提供文件名</param>
            <returns></returns>
        </member>
        <member name="M:rui.webDiskHelper.saveUploadFiles(System.String,System.String,System.String)">
            <summary>
            保存上传文件
            </summary>
            <param name="webInnerPath">上传文件所保存的位置 - 站内跟路径,</param>
            <param name="nameKey">上传控件的Name值</param>
            <param name="fileName">不带文件后缀的文件名</param>
            <returns>返回上传文件在服务器的存放位置 - 站内跟路径</returns>
        </member>
        <member name="M:rui.webDiskHelper.copyFile(System.String,System.String,System.Boolean)">
            <summary>
            文件复制
            </summary>
            <param name="webInnerSourPath">站内源文件</param>
            <param name="webInnerDescPath">站内目标文件</param>
            <param name="isOverWrite">是否覆盖</param>
        </member>
        <member name="M:rui.webDiskHelper.deleteFile(System.String)">
            <summary>
            删除文件
            </summary>
            <param name="webInnerPath">站内路径</param>
        </member>
        <member name="M:rui.webDiskHelper.isFileExist(System.String)">
            <summary>
            判断文件是否存在
            </summary>
            <param name="webInnerPath">站内路径</param>
            <returns></returns>
        </member>
        <member name="T:rui.winform.alert">
            <summary>
            winForm消息显示和确认
            </summary>
        </member>
        <member name="M:rui.winform.alert.Show(System.String)">
            <summary>
            显示消息
            </summary>
            <param name="message">消息内容</param>
        </member>
        <member name="M:rui.winform.alert.confirm(System.String)">
            <summary>
            显示确认框
            </summary>
            <param name="message">确认框提示内容</param>
            <returns>返回确认界面的选择的结果</returns>
        </member>
        <member name="T:rui.winform.dataGridViewHelper">
            <summary>
            Winform中设置DataGridView控件的相关属性
            </summary>
        </member>
        <member name="M:rui.winform.dataGridViewHelper.getSelectedList(System.Windows.Forms.DataGridView,System.String)">
            <summary>
            获取选中行的主键集合
            </summary>
            <param name="view"></param>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:rui.winform.dataGridViewHelper.SetColumnsNoSortable(System.Windows.Forms.DataGridView)">
            <summary>
            设置行不允许排序
            </summary>
            <param name="view"></param>
        </member>
        <member name="M:rui.winform.dataGridViewHelper.setColumnEdit(System.Windows.Forms.DataGridView,System.String,System.Int32)">
            <summary>
            设置列编辑模式
            </summary>
            <param name="view"></param>
            <param name="ColumnName"></param>
            <param name="width"></param>
        </member>
        <member name="M:rui.winform.dataGridViewHelper.removeDuplicate(System.Data.DataTable,System.String,System.Int32[])">
            <summary>
            去除表中重复字段的值
            </summary>
            <param name="table"></param>
            <param name="priKeyName"></param>
            <param name="columns"></param>
        </member>
        <member name="M:rui.winform.dataGridViewHelper.setColumns(System.Windows.Forms.DataGridView)">
            <summary>
            设置列通用属性,保留原长度值
            </summary>
            <param name="view"></param>
        </member>
        <member name="M:rui.winform.dataGridViewHelper.setColumns(System.Windows.Forms.DataGridView,System.Boolean)">
            <summary>
            设置列通用属性
            </summary>
            <param name="view"></param>
            <param name="columnFill"></param>
        </member>
        <member name="M:rui.winform.dataGridViewHelper.setColumns(System.Windows.Forms.DataGridView,System.Boolean,System.String,System.Boolean,System.Boolean)">
            <summary>
            设置列通用属性，为最后一列添加“合计样式”,适用于有合计需求的DataGridView
            </summary>
            <param name="view"></param>
            <param name="columnFill"></param>
            <param name="checkBoxColumnName"></param>
            <param name="hasTotal"></param>
            <param name="is用料单"></param>
        </member>
        <member name="M:rui.winform.dataGridViewHelper.SetRowStyle(System.Windows.Forms.DataGridView,System.String,System.Boolean)">
            <summary>
            设置1对多情况下的行的样式
            </summary>
            <param name="view"></param>
            <param name="priKey"></param>
            <param name="hasTotal"></param>
        </member>
        <member name="M:rui.winform.dataGridViewHelper.computerTotal(System.Data.DataTable,System.Int32[],System.Boolean,System.Boolean)">
            <summary>
            为对应的列计算合计
            </summary>
            <param name="table"></param>
            <param name="columns"></param>
            <param name="hasTotal"></param>
            <param name="hasUnit"></param>
        </member>
        <member name="M:rui.winform.dataGridViewHelper.addCheckBox(System.Windows.Forms.DataGridView)">
            <summary>
            增加全选功能，需要给将DataGridView的第一列设定为Checkbox列类型。
            </summary>
            <param name="view"></param>
        </member>
        <member name="M:rui.winform.dataGridViewHelper.SetRowSelect(System.Windows.Forms.DataGridView,System.String,System.String)">
            <summary>
            设置通过主键值让指定的行选中
            </summary>
            <param name="view"></param>
            <param name="columnName"></param>
            <param name="columnValue"></param>
        </member>
        <member name="M:rui.winform.dataGridViewHelper.getColumnsIndex(System.Windows.Forms.DataGridView,System.String[])">
            <summary>
            
            </summary>
            <param name="view"></param>
            <param name="ColumnNames"></param>
            <returns></returns>
        </member>
        <member name="T:rui.winform.frmCreate`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:rui.winform.frmCreate`1.createFrom(System.Windows.Forms.Form)">
            <summary>
            创建窗体
            </summary>
            <param name="mdi"></param>
            <returns></returns>
        </member>
        <member name="T:rui.winform.frmAssist">
            <summary>
            
            </summary>
        </member>
        <member name="M:rui.winform.frmAssist.createForm(System.Windows.Forms.Form,System.String)">
            <summary>
            
            </summary>
            <param name="mdi"></param>
            <param name="frmName"></param>
            <returns></returns>
        </member>
        <member name="T:rui.winform.printHelper">
            <summary>
            自动打印
            </summary>
        </member>
        <member name="M:rui.winform.printHelper.Print(System.String,System.String,System.Single,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Data.DataTable})">
            <summary>
            外部调用的打印方法
            </summary>
            <param name="rdlcFileName">文件名</param>
            <param name="va打印单类型">打印机名</param>
            <param name="va宽度系数">打印宽度</param>
            <param name="landScape">横向(true)或者纵向(false)</param>
            <param name="rdlcDataSource">打印数据</param>
        </member>
        <member name="M:rui.winform.printHelper.ShowPageSetupDialog(System.Drawing.Printing.PrintDocument)">
            <summary>
            页面设置对话框，可以独立使用
            </summary>
            <param name="printDocument"></param>
            <returns></returns>
        </member>
        <member name="M:rui.winform.printHelper.ShowPrintSetupDialog(System.Drawing.Printing.PrintDocument)">
            <summary>
            打印设置对话框，可以独立使用
            </summary>
            <param name="printDocument"></param>
            <returns></returns>
        </member>
        <member name="M:rui.winform.printHelper.ShowPrintPreviewDialog(System.Drawing.Printing.PrintDocument)">
            <summary>
            打印预览对话框，可以独立使用
            </summary>
            <param name="printDocument"></param>
            <returns></returns>
        </member>
        <member name="T:rui.dbTools">
            <summary>
            数据库辅助方法
            </summary>
        </member>
        <member name="M:rui.dbTools.tranferDataTable(System.Data.DataTable)">
            <summary>
            转换DataTable，转换后所有列都转为非只读字符串
            方便对数据做处理
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:rui.dbTools.removeShowColumn(System.Data.DataTable,System.String)">
            <summary>
            从DataTable中移除展示的列
            </summary>
            <param name="table">包含展示列的dataTable对象</param>
            <param name="removeColumns">要移出的列名; 通过,分割多个列名</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbTools.insert序号(System.Data.DataTable,System.Int32)">
            <summary>
            给DataTable左侧添加序号列
            </summary>
            <param name="table"></param>
            <param name="startIndex">开始值，默认0</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbTools.toDataTable(System.Data.DataRow[])">
            <summary>
            将DataRow数组转成DataTable
            </summary>
            <param name="rows"></param>
            <returns></returns>
        </member>
        <member name="M:rui.dbTools.getTableByDic(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            将dic内容构造成DataTable
            </summary>
            <param name="dic"></param>
            <returns></returns>
        </member>
        <member name="M:rui.dbTools.checkExist(System.Data.DataTable,System.String,System.String)">
            <summary>
            判断DataTable中指定列中是否存在某个值
            </summary>
            <param name="table"></param>
            <param name="columnName">列名</param>
            <param name="value">查找的值（值要求相等）</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbTools.copyDataTable(System.Data.DataTable,System.Data.DataTable)">
            <summary>
            将sourTable的内容复制到descTable中,列名要保存一直
            </summary>
            <param name="sourTable">原表数据为空，将目标表内包含的字段复制过来</param>
            <param name="descTable">前台页面展示用的表格</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbTools.margeDataTable(System.Data.DataTable,System.Data.DataTable,System.String)">
            <summary>
            DataTable进行合并（审批流，不同审批人员合并的时候调用）
            将2合并到1,并返回（2中有的1中没有则合并过来）
            </summary>
            <param name="table1"></param>
            <param name="table2"></param>
            <param name="keyName">判断是否重复的主键字段名称</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbTools.dateFormat(System.Data.DataTable,System.String)">
            <summary>
            处理DataTable内的日期格式，长格式换成短格式
            </summary>
            <param name="table"></param>
            <param name="exceptFieldName">需要排除的列，多个列用,分割</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbTools.setAllowNull(System.Data.DataTable)">
            <summary>
            设置表格列可以为空
            </summary>
            <param name="table">设置DataTable的列值允许为Null值</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbTools.getRowValue(System.Data.DataRow,System.String,System.Boolean)">
            <summary>
            获取DataRow中某字段的值
            </summary>
            <param name="row"></param>
            <param name="fieldName">字段名</param>
            <param name="isThrow">如果row为空，是否抛出异常</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbTools.getInExpression(System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            将集合元素拼接成in表达式
            </summary>
            <param name="list">集合对象</param>
            <param name="handleEmpty">当集合为空时，是否默认返回''</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbTools.getInExpression(System.Data.DataTable,System.String,System.Boolean)">
            <summary>
            将DataTable指定列的值拼接成in表达式
            </summary>
            <param name="table">DataTable数据</param>
            <param name="columnName">列名</param>
            <param name="handleEmpty">当集合为空时，是否默认返回''</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbTools.getInExpression(System.String,System.Boolean)">
            <summary>
            将,分割的字符串拼接成in表达式
            例如：a,b,c,
            返回：'a','b','c'
            </summary>
            <param name="value">,分割的字符串</param>
            <param name="handleEmpty">当集合为空时，是否默认返回''</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbTools.getShowExpression(System.Data.DataTable,System.String,System.Char)">
            <summary>
            将DataTable指定列的值拼接成展示的表达式
            返回形式：a,b,c,
            </summary>
            <param name="table">DataTable数据</param>
            <param name="columnName">列名</param>
            <param name="splitTag">分割符，默认,</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbTools.getShowExpression(System.Collections.Generic.List{System.String},System.Char)">
            <summary>
            将集合元素拼接长展示的表达式,例如：a,b,c,
            </summary>
            <param name="list">集合</param>
            <param name="splitTag">分隔符,默认,</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbTools.getDpLike(System.String)">
            <summary>
            返回like 参数支持的参数值形式
            userName like @userName
            @userName 返回的值形式为：%数据值%
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:rui.dbTools.getDpList(System.String)">
            <summary>
            返回in 参数支持的参数值形式
            rowID in @rowID
            @rowID 返回的值形式为: 集合对象。
            </summary>
            <param name="values">,分割的值</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbTools.getDpList(System.Data.DataTable,System.String)">
            <summary>
            获取in后边的表达式
            </summary>
            <param name="table">表格数据</param>
            <param name="columnName">列名称</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbTools.searchDdl(System.String,System.String,Dapper.DynamicParameters)">
            <summary>
            拼接 = 查询
            </summary>
            <param name="fieldName">字段名/参数名</param>
            <param name="fieldValue">字段值</param>
            <param name="cmdPara">动态参数</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbTools.searchTbx(System.String,System.String,Dapper.DynamicParameters)">
            <summary>
            拼接 like 模糊查询 
            </summary>
            <param name="fieldName">字段名/参数名</param>
            <param name="fieldValue">字段值</param>
            <param name="cmdPara">动态参数</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbTools.searchContainValue(System.String,System.String,Dapper.DynamicParameters)">
            <summary>
            字段值 包含 值
            </summary>
            <param name="fieldName">搜索字段/参数名</param>
            <param name="subValue">子串</param>
            <param name="cmdPara">动态参数</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbTools.searchContainField(System.String,System.String,Dapper.DynamicParameters)">
            <summary>
            值 包含 字段值
            </summary>
            <param name="fieldName">搜索字段/参数名</param>
            <param name="parentValue">父串</param>
            <param name="cmdPara">动态参数</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbTools.searchIn(System.String,System.String,Dapper.DynamicParameters)">
            <summary>
            拼接 in 查询
            支持两种情况
            1)子查询语句，如果子查询语句中包含参数需要通过cmdPara单独添加。
            2)inExpr;
            </summary>
            <param name="fieldName">字段名/参数名</param>
            <param name="inValue">in表达式</param>
            <param name="cmdPara">动态参数</param>
        </member>
        <member name="M:rui.dbTools.searchNoIn(System.String,System.String,Dapper.DynamicParameters)">
            <summary>
            拼接 not in 查询
            支持两种情况
            1)子查询语句，如果子查询语句中包含参数需要通过cmdPara单独添加。
            2)inExpr;
            </summary>
            <param name="fieldName">字段名/参数名</param>
            <param name="inValue">in表达式</param>
            <param name="cmdPara">动态参数</param>
        </member>
        <member name="M:rui.dbTools.searchDate(System.String,System.String,System.String,Dapper.DynamicParameters)">
            <summary>
            拼接时间搜索
            </summary>
            <param name="fieldName">字段名/参数名</param>
            <param name="dateStart">开始时间</param>
            <param name="dataEnd">结果时间</param>
            <param name="cmdPara">动态参数</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbTools.searchRange(System.String,System.String,System.String,Dapper.DynamicParameters)">
            <summary>
            数据范围搜索
            </summary>
            <param name="fieldName">字段名/参数名</param>
            <param name="startValue">开始值</param>
            <param name="endValue">结束值</param>
            <param name="cmdPara">动态参数</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbTools.searchTbx(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            拼接 like 模糊查询  - 外库导入查询 ===
            </summary>
            <param name="fieldName">字段名</param>
            <param name="fieldValue">字段值</param>
            <param name="dic">保存拼接结果</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbTools.searchDdl(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            拼接 = 查询  - 外库导入查询 ===
            </summary>
            <param name="fieldName">字段名</param>
            <param name="fieldValue">字段值</param>
            <param name="dic">保存拼接结果</param>
        </member>
        <member name="M:rui.dbTools.getWhereExpr(System.String)">
            <summary>
            获取查询语句中Where语句表达式,包含 where 关键字
            如果包含order 语句 需要去除
            </summary>
            <param name="querySql">查询语句</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbTools.getListByInExpr(System.String)">
            <summary>
            将in表达式转换为List
            </summary>
            <param name="inExpr">类似：'1','2',</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbTools.getList(System.String,System.Char)">
            <summary>
            将字符串内容 添加到集合中
            </summary>
            <param name="value">包含分隔符的字符串</param>
            <param name="splitTag">默认,</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbTools.getList(System.Data.DataTable,System.String)">
            <summary>
            将DataTable指定列的值添加到集合中，并返回
            </summary>
            <param name="table"></param>
            <param name="columnName">列名</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbTools.addList``1(System.Collections.Generic.List{``0},``0)">
            <summary>
            向集合中添加元素
            </summary>
            <typeparam name="T">元素的类型</typeparam>
            <param name="list">集合</param>
            <param name="item">元素</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbTools.unionList``1(System.Collections.Generic.List{``0},System.Collections.Generic.List{``0})">
            <summary>
            两个集合合并
            </summary>
            <typeparam name="T">集合元素类型</typeparam>
            <param name="list1">集合1</param>
            <param name="list2">集合2</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbTools.exceptList``1(System.Collections.Generic.List{``0},System.Collections.Generic.List{``0})">
            <summary>
            两个集合差运算，从List1中排除List2中包含的元素
            </summary>
            <typeparam name="T">元素类型</typeparam>
            <param name="list1">集合1</param>
            <param name="list2">集合2</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbTools.addDic``2(System.Collections.Generic.Dictionary{``0,``1},``0,``1)">
            <summary>
            向键值对集合添加元素
            </summary>
            <typeparam name="K">键的类型</typeparam>
            <typeparam name="V">值的类型</typeparam>
            <param name="dic">集合</param>
            <param name="key">键</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:rui.dbTools.checkRowFieldValue(System.Data.DataRow[],System.String,System.String,System.String)">
            <summary>
            检查rows是否有数据
            如果有数据，判断第一行fieldName的值是否等于fieldValue
            如果等于，则抛出异常
            </summary>
            <param name="rows">DataRow数组</param>
            <param name="fieldName">要判断的字段名</param>
            <param name="fieldValue">要判断的字段值</param>
            <param name="errorMsg">等于时抛出的错误</param>
        </member>
        <member name="M:rui.dbTools.checkRowFieldNotValue(System.Data.DataRow[],System.String,System.String,System.String)">
            <summary>
            检查rows是否有数据
            如果有数据，判断第一行fieldName的值是否等于fieldValue
            如果不等于，则抛出异常
            </summary>
            <param name="rows">DataRow数组</param>
            <param name="fieldName">要判断的字段名</param>
            <param name="fieldValue">要判断的字段值</param>
            <param name="errorMsg">不等于时抛出的错误</param>
        </member>
        <member name="M:rui.dbTools.getBatchMsg(System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            获取批量操作的显示消息-带异常提醒
            </summary>
            <param name="opName">操作名称</param>
            <param name="rowCount">批量操作的数据行数</param>
            <param name="errorDic">出错主键集合：Key:出错提醒键值，Value:出错描述</param>
            <returns></returns>
        </member>
        <member name="T:rui.syncHelper">
            <summary>
            项目中用来进行同步的方法
            </summary>
        </member>
        <member name="F:rui.syncHelper.checkExistUse外库">
            <summary>
            检查数据存在是否使用外库
            </summary>
        </member>
        <member name="M:rui.syncHelper.periodicalUpdateImportLogForPurchaseSys">
            <summary>
            同步所有表的数据
            周期性的同步导入日志，保证数据的一致性 
            </summary>
        </member>
        <member name="M:rui.syncHelper.periodicalUpdateTableData(System.String)">
            <summary>
            同步单个表的数据
            周期性的利用外库数据更新本库已导入数据
            </summary>
            <param name="sysTableName">表名称</param>
        </member>
        <member name="M:rui.syncHelper.syncData(System.String,System.String,System.String@)">
            <summary>
            导入数据
            完成基本数据的同步任务而写的通用数据同步代码（利用同步接口）
            </summary>
            <param name="sysTableName">表名称</param>
            <param name="selectedinExpression">选中项表达式</param>
            <param name="message">消息提醒</param>
            <returns></returns>
        </member>
        <member name="M:rui.syncHelper.syncSubData(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String}@)">
            <summary>
            获取导入从表的脚本
            获取插入从表所需要的sql语句
            （从表的导入不直接调用，导入主表时一起导入，不记录导入日志）
            </summary>
            <param name="sysTableName"></param>
            <param name="insertKeyList"></param>
            <param name="insertSqlList"></param>
        </member>
        <member name="M:rui.syncHelper.syncAllData(System.String,System.String@)">
            <summary>
            导入外库中所有未导入的数据
            将外库所有未导入数据导入
            </summary>
            <param name="sysTableName"></param>
            <param name="message"></param>
        </member>
        <member name="M:rui.syncHelper.getSearchSql(System.String,System.String@,System.String@,System.Collections.Generic.Dictionary{System.String,System.String}@,System.Boolean)">
            <summary>
            拼接查询来源库的Sql
            获取查询外库的sql语句
            </summary>
            <param name="sysTableName">表名</param>
            <param name="orderSql">回传的排序表达式</param>
            <param name="sourceKeyFieldName">回转的来源库主键字段</param>
            <param name="searchCon">传入的是搜索条件，回传的是显示字段列表</param>
            <param name="exceptExist">是否排除已存在的记录</param>
            <returns></returns>
        </member>
        <member name="M:rui.syncHelper.getSyncPara(rui.syncPara@)">
            <summary>
            利用para.sysTableName属性值获取导入配置参数信息
            </summary>
            <param name="para"></param>
            <returns></returns>
        </member>
        <member name="M:rui.syncHelper.getFieldAliasName(System.String)">
            <summary>
            获取字段名称（如果有别名，则返回别名），用于获取字段值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:rui.syncHelper.getFieldName(System.String,System.Boolean)">
            <summary>
            获取字段名称（如果有别名，获取原始名称），用于Where条件
            </summary>
            <param name="name"></param>
            <param name="removePre"></param>
            <returns></returns>
        </member>
        <member name="M:rui.syncHelper.getFildValue(System.String)">
            <summary>
            对于空的字段返回null
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:rui.syncHelper.getTableName(System.String)">
            <summary>
            获取外库表名
            </summary>
            <param name="sysTableName"></param>
            <returns></returns>
        </member>
        <member name="T:rui.syncPara">
            <summary>
            数据导入配置参数
            </summary>
        </member>
        <member name="F:rui.syncPara.sysTableName">
            <summary>
            本系统表名标识
            </summary>
        </member>
        <member name="F:rui.syncPara.sysInsertTableName">
            <summary>
            本系统需要导入的表名称
            </summary>
        </member>
        <member name="F:rui.syncPara.sysKeyFieldName">
            <summary>
            本系统库主键字段名
            </summary>
        </member>
        <member name="F:rui.syncPara.sourceTableName">
            <summary>
            来源库的表名
            </summary>
        </member>
        <member name="F:rui.syncPara.sourceTableJoinExpression">
            <summary>
            来源库join表达式
            </summary>
        </member>
        <member name="F:rui.syncPara.sourceTableWhereExpression">
            <summary>
            来源库where表达式
            </summary>
        </member>
        <member name="F:rui.syncPara.sourceTableOrderExpression">
            <summary>
            来源库order表达式
            </summary>
        </member>
        <member name="F:rui.syncPara.showFieldList">
            <summary>
            需要展示的字段
            </summary>
        </member>
        <member name="F:rui.syncPara.importFieldList">
            <summary>
            需要导入的字段
            </summary>
        </member>
        <member name="F:rui.syncPara.filterFieldList">
            <summary>
            筛选用的字段
            </summary>
        </member>
        <member name="M:rui.syncPara.#ctor(System.String)">
            <summary>
            配置对应的属性
            </summary>
            <param name="sysTableName"></param>
        </member>
        <member name="T:rui.diskHelper">
            <summary>
            文件和目录操作辅助类
            </summary>
        </member>
        <member name="M:rui.diskHelper._getDirectoryPath(System.String)">
            <summary>
            获取Path中的路径部分
            </summary>
            <param name="pathValue"></param>
            <returns></returns>
        </member>
        <member name="M:rui.diskHelper.createDirectory(System.String)">
            <summary>
            创建目录
            </summary>
            <param name="absolutePath">绝对路径</param>
        </member>
        <member name="M:rui.diskHelper.deleteDirectory(System.String)">
            <summary>
            删除目录
            </summary>
            <param name="absolutePath">绝对路径</param>
        </member>
        <member name="M:rui.diskHelper.copyDirectory(System.String,System.String,System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            目录文件复制(存在则覆盖)
            </summary>
            <param name="sourPath">源目录</param>
            <param name="descPath">目标位置</param>
            <param name="exceptList">排除的文件类型</param>
            <param name="isOverWrite">是否强制覆盖,还是变更了才覆盖</param>
            <returns></returns>
        </member>
        <member name="M:rui.diskHelper._copyFile(System.String,System.String,System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            复制文件的子方法
            </summary>
            <param name="sourFilePath"></param>
            <param name="destFilePath"></param>
            <param name="exceptList"></param>
            <param name="isOverWrite">是否强制覆盖文件</param>
        </member>
        <member name="M:rui.diskHelper.copyFile(System.String,System.String,System.Boolean)">
            <summary>
            文件复制
            </summary>
            <param name="sourFilePath">源文件</param>
            <param name="destFilePath">目标文件</param>
            <param name="isOverWrite">是否覆盖</param>
        </member>
        <member name="M:rui.diskHelper.deleteFile(System.String)">
            <summary>
            删除文件
            </summary>
            <param name="absolutePath">绝对路径</param>
        </member>
        <member name="M:rui.diskHelper.isExist(System.String)">
            <summary>
            判断文件是否存在
            </summary>
            <param name="absolutePath">绝对路径</param>
            <returns></returns>
        </member>
        <member name="M:rui.diskHelper.getFileName(System.String)">
            <summary>
            获取客户端上传的文件名
            </summary>
            <param name="pathValue">客户端文件路径</param>
            <returns></returns>
        </member>
        <member name="M:rui.diskHelper.getEtn(System.String)">
            <summary>
            获取文件后缀名
            </summary>
            <param name="filePath">客户端文件路径</param>
            <returns></returns>
        </member>
        <member name="M:rui.diskHelper.sqlListToFile(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            导出sql文件
            </summary>
            <param name="absolutePath">物理路径</param>
            <param name="list"></param>
        </member>
        <member name="T:rui.encryptHelper">
            <summary>
            加密辅助类
            </summary>
        </member>
        <member name="M:rui.encryptHelper.toMD5(System.String)">
            <summary>
            把一个字符串转换成对应的MD5
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:rui.encryptHelper.DES加密(System.String)">
            <summary>
            加密
            </summary>
            <param name="data">明文</param>
            <returns>密文</returns>
        </member>
        <member name="M:rui.encryptHelper.DES解密(System.String)">
            <summary>
            解密
            </summary>
            <param name="data">密文</param>
            <returns>明文</returns>
        </member>
        <member name="M:rui.encryptHelper.getPrivInfo">
            <summary>
            获取授权信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:rui.encryptHelper.getHardwareID(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            获取硬件标识
            </summary>
            <param name="cpu"></param>
            <param name="hdd"></param>
            <param name="mac"></param>
            <param name="mainBoard"></param>
            <param name="bios"></param>
            <param name="os"></param>
            <returns></returns>
        </member>
        <member name="T:rui.excelHelper">
            <summary>
            Excel导出和导入
            </summary>
        </member>
        <member name="M:rui.excelHelper.excelToDataTable(System.String)">
            <summary>
            Excel To DataTable
            </summary>
            <param name="strFilePath">文件的绝对路径</param>
            <returns></returns>
        </member>
        <member name="M:rui.excelHelper.dataTableToExcel(System.Data.DataTable,System.String)">
            <summary>
            DataTable To Excel
            </summary>
            <param name="table"></param>
            <param name="SheetName">Sheetname</param>
            <returns>返回文件的流</returns>
        </member>
        <member name="T:rui.expressionComputer">
            <summary>
            表达式计算
            </summary>
        </member>
        <member name="M:rui.expressionComputer.Calculate(System.String,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            计算1
            </summary>
            <param name="formula"></param>
            <param name="lz"></param>
            <param name="jz"></param>
            <param name="zsz"></param>
            <param name="psz"></param>
            <param name="xs"></param>
            <returns></returns>
        </member>
        <member name="M:rui.expressionComputer.Calculate折足率(System.String,System.Double,System.Double,System.Double)">
            <summary>
            计算2
            </summary>
            <param name="formula"></param>
            <param name="zl"></param>
            <param name="zzl"></param>
            <param name="hz"></param>
            <returns></returns>
        </member>
        <member name="T:rui.gridReport.queryItem">
            <summary>
            Grid++ Report提供的类
            报表查询语句对象(如果一个报表需要多个查询语句，通过该对象传递查询语句)
            </summary>
        </member>
        <member name="F:rui.gridReport.queryItem.QuerySQL">
            <summary>
            SQL语句
            </summary>
        </member>
        <member name="F:rui.gridReport.queryItem.RecordsetName">
            <summary>
            记录集名称
            </summary>
        </member>
        <member name="M:rui.gridReport.queryItem.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="querySQL"></param>
            <param name="recordsetName"></param>
        </member>
        <member name="T:rui.gridReport.baseReportData">
            <summary>
            返回报表数据的基类
            </summary>
        </member>
        <member name="F:rui.gridReport.baseReportData.DbConnStr">
            <summary>
            数据库连接串（根据提供程序种类设定所需要的数据库连接串）
            </summary>
        </member>
        <member name="F:rui.gridReport.baseReportData.DateSqlBracketChar">
            <summary>
            日期特殊符号
            </summary>
        </member>
        <member name="P:rui.gridReport.baseReportData.ReportConn">
            <summary>
            连接对象
            </summary>
        </member>
        <member name="T:rui.gridReport.CreateJsonReportData">
            <summary>
            返回JSON格式的报表数据辅助类
            </summary>
        </member>
        <member name="M:rui.gridReport.CreateJsonReportData.fromOneSQL(System.String)">
            <summary>
            
            </summary>
            <param name="QuerySQL"></param>
            <returns></returns>
        </member>
        <member name="M:rui.gridReport.CreateJsonReportData.fromMultiSQL(System.Collections.ArrayList)">
            <summary>
            
            </summary>
            <param name="QueryList"></param>
            <returns></returns>
        </member>
        <member name="M:rui.gridReport.CreateJsonReportData.fromDataSet(System.Data.DataSet)">
            <summary>
            
            </summary>
            <param name="ds"></param>
            <returns></returns>
        </member>
        <member name="M:rui.gridReport.CreateJsonReportData.fromDataTable(System.Data.DataTable)">
            <summary>
            
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="T:rui.gridReport.CreateXmlReportData">
            <summary>
            返回XML格式的报表数据辅助类
            </summary>
        </member>
        <member name="M:rui.gridReport.CreateXmlReportData.fromOneSQL(System.String)">
            <summary>
            通过单个Sql语句查询报表所需的数据
            </summary>
            <param name="QuerySQL"></param>
            <returns></returns>
        </member>
        <member name="M:rui.gridReport.CreateXmlReportData.fromMultiSQL(System.Collections.ArrayList)">
            <summary>
            通过多个Sql语句查询报表所需的数据
            </summary>
            <param name="QueryList"></param>
            <returns></returns>
        </member>
        <member name="M:rui.gridReport.CreateXmlReportData.fromDataSet(System.Data.DataSet)">
            <summary>
            
            </summary>
            <param name="ds"></param>
            <returns></returns>
        </member>
        <member name="M:rui.gridReport.CreateXmlReportData.fromDataTable(System.Data.DataTable)">
            <summary>
            
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="T:rui.gridReport.XMLReportData">
            <summary>
            返回xml格式的报表数据
            </summary>
        </member>
        <member name="M:rui.gridReport.XMLReportData.FromDataSet(System.Data.DataSet)">
            <summary>
            根据 DataSet 产生提供给报表需要的XML文本数据
            </summary>
            <param name="ReportDataSet"></param>
            <returns></returns>
        </member>
        <member name="M:rui.gridReport.XMLReportData.FromDataTable(System.Data.DataTable)">
            <summary>
            根据 DataTable 产生提供给报表需要的XML文本数据
            </summary>
            <param name="mydt"></param>
            <returns></returns>
        </member>
        <member name="T:rui.gridReport.JSONReportData">
            <summary>
            返回JSon格式的报表数据
            </summary>
        </member>
        <member name="M:rui.gridReport.JSONReportData.FromDataSet(System.Data.DataSet)">
            <summary>
            根据 DataSet 产生提供给报表需要的JSON文本数据
            </summary>
            <param name="ds"></param>
            <returns></returns>
        </member>
        <member name="M:rui.gridReport.JSONReportData.FromDataTable(System.Data.DataTable)">
            <summary>
            根据 DataTable 产生提供给报表需要的JSON文本数据
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="T:rui.imageHelper">
            <summary>
            图片操作辅助类
            </summary>
        </member>
        <member name="M:rui.imageHelper.ImageToBase64(System.Drawing.Image)">
            <summary>
            图片转base64
            </summary>
            <param name="img"></param>
            <returns></returns>
        </member>
        <member name="M:rui.imageHelper.Base64ToImage(System.String)">
            <summary>
            base64转图片
            </summary>
            <param name="base64"></param>
            <returns></returns>
        </member>
        <member name="M:rui.imageHelper.ImageToBytes(System.Drawing.Image)">
            <summary>
            Convert Image to Byte[]
            </summary>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="M:rui.imageHelper.BytesToImage(System.Byte[])">
            <summary>
            Convert Byte[] to Image
            </summary>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:rui.imageHelper.CreateImageFromBytes(System.String,System.Byte[])">
            <summary>
            Convert Byte[] to a picture and Store it in file
            </summary>
            <param name="fileName">物理路径，不带后缀名</param>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:rui.imageHelper.getImageFromPath(System.String)">
            <summary>
            通过路径获取图片对象
            </summary>
            <param name="path">物理路径</param>
            <returns></returns>
        </member>
        <member name="M:rui.imageHelper.getImageSize(System.String)">
            <summary>
            获取图片大小
            </summary>
            <param name="path">物理路径</param>
            <returns></returns>
        </member>
        <member name="M:rui.imageHelper.saveImage(System.Drawing.Image,System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            图片保存
            </summary>
            <param name="img"></param>
            <param name="path">物理路径</param>
            <param name="imgFormat"></param>
        </member>
        <member name="M:rui.imageHelper.RotateImg(System.Drawing.Image,System.Single)">
            <summary>
            根据角度旋转图标
            </summary>
            <param name="img"></param>
            <param name="angle">角度</param>
        </member>
        <member name="M:rui.imageHelper.RotateImg2(System.Drawing.Image,System.Single)">
            <summary>
            第二种方法
            </summary>
            <param name="b"></param>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="M:rui.imageHelper.ImgAutoRotate(System.Drawing.Image)">
            <summary>
            EXIF 内部 Orientation参数的值进行图片的旋转
            </summary>
            <param name="img"></param>
        </member>
        <member name="T:rui.IQueryableExtensions">
            <summary>
            IEnumerable查询在内存中进行，获取到所有数据，并进行查询. 对应于Linq to Object
            而IQueryable查询时生成对应的Sql语句，在数据库中进行查询. 对应于Linq to Sql
            </summary>
        </member>
        <member name="M:rui.IQueryableExtensions.ToPagedQuery``1(System.Linq.IQueryable{``0},System.Int32,System.Int32)">
            <summary>
            EntiryFramework动态查询结果分页,查询中需要有orderby语句
            </summary>
        </member>
        <member name="M:rui.IQueryableExtensions.ToDataTable``1(System.Linq.IQueryable{``0})">
            <summary>
            EntiryFramework动态查询结果转为DataTable
            </summary>
        </member>
        <member name="M:rui.IQueryableExtensions.ToPagedQuery``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            内存对象查询结果分页
            </summary>
        </member>
        <member name="M:rui.IQueryableExtensions.ToDataTable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            查询结果转为DataTable
            </summary>
        </member>
        <member name="T:rui.iTextSharpHelper">
            <summary>
            iTextSharp类的使用 生成PDF文件
            </summary>
        </member>
        <member name="M:rui.iTextSharpHelper.createPdf(System.String)">
            <summary>
            生成pdf文件 - 新华印务微信号用的，定制作品生成为pdf文件
            </summary>
            <param name="designCode"></param>
        </member>
        <member name="T:rui.logHelper">
            <summary>
            日志输出辅助类
            </summary>
        </member>
        <member name="M:rui.logHelper.log(System.String)">
            <summary>
            记录文本内容
            如果上线后不输出
            </summary>
            <param name="message">记录的文本内容</param>
        </member>
        <member name="M:rui.logHelper.log(System.Exception,System.Boolean)">
            <summary>
            记录异常内容
            如果是自定义的异常，上线后不记录
            </summary>
            <param name="ex">记录的异常对象</param>
            <param name="isThrow">是否继续向外抛出该异常</param>
        </member>
        <member name="M:rui.logHelper.log(System.String,System.Exception,System.Boolean)">
            <summary>
            记录错误，记录异常
            如果上线了，错误不记录，自定义异常不记录
            </summary>
            <param name="message">记录的文本内容</param>
            <param name="ex">记录的异常对象</param>
            <param name="isThrow">是否继续向外抛出该异常</param>
        </member>
        <member name="M:rui.logHelper.debug(System.String)">
            <summary>
            输出调试信息
            上线后也输出
            </summary>
            <param name="message">调试的文本内容</param>
        </member>
        <member name="M:rui.logHelper.LogMsg(System.String)">
            <summary>
            记录字符串内容
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:rui.logHelper.LogDebug(System.String)">
            <summary>
            记录字符串内容
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:rui.logHelper.LogException(System.Exception)">
            <summary>
            记录异常内容
            如果是自定义的异常，则上线后不记录
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:rui.logHelper.getExInfo(System.Exception)">
            <summary>
            获取异常消息
            </summary>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="T:rui.pagerHelper">
            <summary>
            数据分页的辅助类
            </summary>
        </member>
        <member name="P:rui.pagerHelper.Result">
            <summary>
            保存分页查询结果
            </summary>
        </member>
        <member name="M:rui.pagerHelper.#ctor">
            <summary>
            默认不带参数的构造函数
            </summary>
        </member>
        <member name="M:rui.pagerHelper.#ctor(System.String,System.String,rui.pagerBase)">
            <summary>
            带参数的构造函数
            </summary>
            <param name="querySql">查询字符串</param>
            <param name="orderSql">查询总数量字符串</param>
            <param name="pagerPara">分页参数</param>
        </member>
        <member name="M:rui.pagerHelper.processSql">
            <summary>
            对传入的查询sql进行处理
            处理完毕之后获取到getField，countSql语句
            </summary>
        </member>
        <member name="M:rui.pagerHelper.Execute(System.Int32,System.Int32,rui.pagerBase,System.String)">
            <summary>
            数据查询方法
            查询完毕，设置pageCount,rowCount
            </summary>
            <param name="pageSize">页面大小</param>
            <param name="pageIndex">当前页</param>
            <param name="pager">分页基类</param>
            <param name="exceptDateFieldName">需要排除的列</param>
        </member>
        <member name="M:rui.pagerHelper.ExecuteI6(System.Int32,System.Int32,rui.pagerBase)">
            <summary>
            数据查询方法
            查询完毕，设置pageCount,rowCount
            </summary>
            <param name="pageSize">页面大小</param>
            <param name="pageIndex">当前页</param>
            <param name="pager">分页基类</param>
        </member>
        <member name="T:rui.dataRange">
            <summary>
            导出和汇总数据范围
            </summary>
        </member>
        <member name="F:rui.dataRange.all">
            <summary>
            所有查询结果
            </summary>
        </member>
        <member name="F:rui.dataRange.page">
            <summary>
            本页面数据
            </summary>
        </member>
        <member name="T:rui.messageHelper">
            <summary>
            发送短信的插件（sms平台的）
            </summary>
        </member>
        <member name="M:rui.messageHelper.Send(System.String,System.String)">
            <summary>
            发送方法
            </summary>
            <param name="message"></param>
            <param name="phone"></param>
        </member>
        <member name="T:rui.pagerBase">
            <summary>
            分页模型类基类
            </summary>
        </member>
        <member name="F:rui.pagerBase.dataTable">
            <summary>
            存放要展示的表格数据
            </summary>
        </member>
        <member name="F:rui.pagerBase.keyField">
            <summary>
            存放默认主键字段
            </summary>
        </member>
        <member name="F:rui.pagerBase.showColumn">
            <summary>
            存放表格列配置数据
            </summary>
        </member>
        <member name="P:rui.pagerBase.sumSql">
            <summary>
            汇总查询语句
            </summary>
        </member>
        <member name="P:rui.pagerBase.sumRange">
            <summary>
            汇总数据范围
            </summary>
        </member>
        <member name="F:rui.pagerBase.sumRow">
            <summary>
            存放汇总列数据
            </summary>
        </member>
        <member name="P:rui.pagerBase.cmdPara">
            <summary>
            存放查询语句中包含参数的参数值
            </summary>
        </member>
        <member name="P:rui.pagerBase.loginUserCode">
            <summary>
            当前登录用户的标识
            </summary>
        </member>
        <member name="P:rui.pagerBase.PageSize">
            <summary>
            分页大小
            </summary>
        </member>
        <member name="P:rui.pagerBase.PageWidth">
            <summary>
            页面宽度
            </summary>
        </member>
        <member name="P:rui.pagerBase.PageIndex">
            <summary>
            当前页码
            </summary>
        </member>
        <member name="P:rui.pagerBase.ExeCountSql">
            <summary>
            是否执行Count语句
            </summary>
        </member>
        <member name="P:rui.pagerBase.PageCount">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:rui.pagerBase.RowCount">
            <summary>
            总行数
            </summary>
        </member>
        <member name="P:rui.pagerBase.OrderField">
            <summary>
            排序字段名
            </summary>
        </member>
        <member name="P:rui.pagerBase.OrderWay">
            <summary>
            排序方式
            </summary>
        </member>
        <member name="P:rui.pagerBase.ResourceCode">
            <summary>
            资源编码
            </summary>
        </member>
        <member name="P:rui.pagerBase.IsDataPriv">
            <summary>
            是否启用数据权限控制，只是一个bool变量，获取指定的数据范围需要单独写代码
            </summary>
        </member>
        <member name="P:rui.pagerBase.ExportRange">
            <summary>
            excel导出数据范围
            空-不导出，page-当前页数据,all-所有查询数据
            </summary>
        </member>
        <member name="P:rui.pagerBase.SheetName">
            <summary>
            导出文件的Sheet名称
            </summary>
        </member>
        <member name="P:rui.pagerBase.LongDateField">
            <summary>
            需要显示成长日期格式的字段;多个字段用,分割
            </summary>
        </member>
        <member name="P:rui.pagerBase.opMode">
            <summary>
            视图模型 Update/Detail
            </summary>
        </member>
        <member name="M:rui.pagerBase.Search">
            <summary>
            搜索方法，需要重写的方法
            </summary>
        </member>
        <member name="M:rui.pagerBase.getPageConfig(System.String)">
            <summary>
            获取分页大小和页面宽度
            三个配置优先级有低到高
            1、系统资源内可以配置
            2、用户可以自己定义
            3、可以通过属性来设定
            <param name="userSessionName">存放用户登录账号的sessionID</param>
            </summary>
        </member>
        <member name="M:rui.pagerBase.getPageConfig(System.String,System.String)">
            <summary>
            获取分页大小和页面宽度
            三个配置优先级有低到高
            1、系统资源内可以配置
            2、用户可以自己定义
            3、可以通过属性来设定
            </summary>
            <param name="resourceCode">当列配置码和资源编码不一致的时候用</param>
            <param name="userSessionName">存放用户登录账号的sessionID</param>
        </member>
        <member name="M:rui.pagerBase.getOrderSql(System.String,System.String,System.String,System.String)">
            <summary>
            拼接排序语句
            </summary>
            <param name="orderField">排序字段</param>
            <param name="orderWay">排序方式</param>
            <param name="prev">前置排序字段  rowID desc </param>
            <param name="next">后置排序字段  rowID desc </param>
            <returns></returns>
        </member>
        <member name="M:rui.pagerBase.getShowColumn(System.Boolean)">
            <summary>
            通过资源编号获取列配置(采用对象的资源编号)
            </summary>
            <param name="isUseUser">是否获取用户配置的,loginUserCode需要保存登录用户的值</param>
            <returns></returns>
        </member>
        <member name="M:rui.pagerBase.getShowColumn(System.String,System.Boolean)">
            <summary>
            通过资源编号获取资源列配置
            </summary>
            <param name="resourceCode">资源的标识</param>
            <param name="isUseUser">是否获取用户配置的,loginUserCode需要保存登录用户的值</param>
            <returns></returns>
        </member>
        <member name="M:rui.pagerBase.ExportToXls">
            <summary>
            将查询数据生成为xlsx文件,需要通过下载才能实现最终的导出效果
            当exportType参数不为空时，执行数据导出方法
            </summary>
        </member>
        <member name="M:rui.pagerBase._createTableOption(System.Data.DataTable)">
            <summary>
            为layTable表格组件生成表格的列选项数据
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:rui.pagerBase._createColOption(System.Data.DataRow)">
            <summary>
            生成列的选项数据
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="T:rui.qrHelper">
            <summary>
            二维码和条形码生成的
            </summary>
        </member>
        <member name="M:rui.qrHelper.create二维码(System.String)">
            <summary>
            创建URL的二维码
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:rui.qrHelper.createCode39(System.String)">
            <summary>
            创建加工单条形码
            </summary>
            <param name="No"></param>
            <returns></returns>
        </member>
        <member name="T:rui.rdlcHelper">
            <summary>
            rdlc报表打印辅助方法
            </summary>
        </member>
        <member name="M:rui.rdlcHelper.PrintToImage(System.String,System.Double,System.Double,System.String,System.Collections.Generic.Dictionary{System.String,System.Data.DataTable})">
            <summary>
            将要打印的内容生成为图片,并返回
            </summary>
            <param name="rdlcFileName">打印单名称，具体位置通过内部来定义</param>
            <param name="pageWidth">图片宽</param>
            <param name="pageHeight">图片高</param>
            <param name="keyCode">文件名编码</param>
            <param name="rdlcDataSource">报表所需数据</param>
            <returns></returns>
        </member>
        <member name="M:rui.rdlcHelper.PrintToPDF(System.String,System.Double,System.Double,System.String,System.Collections.Generic.Dictionary{System.String,System.Data.DataTable})">
            <summary>
            将报表打印内容导出为PDF
            </summary>
            <param name="rdlcFileName"></param>
            <param name="pageWidth"></param>
            <param name="pageHeight"></param>
            <param name="keyCode"></param>
            <param name="rdlcDataSource"></param>
            <returns></returns>
        </member>
        <member name="T:rui.rmbUpper">
            <summary>
            人民币大小写金额转换
            </summary>
        </member>
        <member name="M:rui.rmbUpper.ConvertIntToUppercaseAmount(System.String)">
            <summary>
            转换整数为大写金额
            最高精度为垓，保留小数点后4位，实际精度为亿兆已经足够了，理论上精度无限制，如下所示：
            序号:...30.29.28.27.26.25.24  23.22.21.20.19.18  17.16.15.14.13  12.11.10.9   8 7.6.5.4  . 3.2.1.0
            单位:...垓兆亿萬仟佰拾        京亿萬仟佰拾       兆萬仟佰拾      亿仟佰拾     萬仟佰拾元 . 角分厘毫
            数值:...1000000               000000             00000           0000         00000      . 0000
            下面列出网上搜索到的数词单位：
            元、十、百、千、万、亿、兆、京、垓、秭、穰、沟、涧、正、载、极
            </summary>
            <param name="capValue">整数值</param>
            <returns>返回大写金额</returns>
        </member>
        <member name="M:rui.rmbUpper.ConvertDecToUppercaseAmount(System.String,System.Boolean)">
            <summary>
            转换小数为大写金额
            </summary>
            <param name="capValue">小数值</param>
            <param name="addZero">是否增加零位</param>
            <returns>返回大写金额</returns>
        </member>
        <member name="M:rui.rmbUpper.RMBAmount(System.Nullable{System.Decimal})">
            <summary>
            人民币大写金额
            </summary>
            <param name="value">人民币数字金额值</param>
            <returns>返回人民币大写金额</returns>
        </member>
        <member name="T:rui.sessionHelper">
            <summary>
            Session内置对象辅助方法
            </summary>
        </member>
        <member name="M:rui.sessionHelper.saveValue``1(System.String,``0)">
            <summary>
            向Session中存入值
            </summary>
            <param name="sessionKey"></param>
            <param name="value"></param>
        </member>
        <member name="M:rui.sessionHelper.getValue(System.String,System.Boolean)">
            <summary>
            获取Session中的值，返回字符串
            </summary>
            <param name="sessionKey"></param>
            <param name="isThrowOnNull"></param>
            <returns></returns>
        </member>
        <member name="M:rui.sessionHelper.getValue``1(System.String,System.Boolean)">
            <summary>
            获取Session中的值
            </summary>
            <param name="sessionKey"></param>
            <param name="isThrowOnNull"></param>
            <returns></returns>
        </member>
        <member name="M:rui.sessionHelper.hasKey(System.String)">
            <summary>
            判断Session中是否有值
            </summary>
            <param name="sessionName"></param>
            <returns></returns>
        </member>
        <member name="M:rui.sessionHelper.removeKey(System.String)">
            <summary>
            移除Session中存入变量
            </summary>
            <param name="sessionName"></param>
        </member>
        <member name="M:rui.sessionHelper.exit">
            <summary>
            Session注销
            </summary>
        </member>
        <member name="T:rui.typeHelper">
            <summary>
            数据类型转换
            </summary>
        </member>
        <member name="M:rui.typeHelper.toDateTimeString(System.Object,System.Boolean)">
            <summary>
            时间转字符串
            长格式：yyyy/MM/dd HH:mm:ss
            短格式：yyyy/MM/dd
            </summary>
            <param name="value">任意形式数据</param>
            <param name="islang">是否长格式</param>
            <returns></returns>
        </member>
        <member name="M:rui.typeHelper.toDateTimeFormat(System.Object,System.String)">
            <summary>
            返回指定格式的日期字符串
            </summary>
            <param name="value">任意形式数据</param>
            <param name="format">日期格式化串</param>
            <returns></returns>
        </member>
        <member name="M:rui.typeHelper.toDateTimeAllowNull(System.Object)">
            <summary>
            字符串转为时间（不合法串返回null)
            </summary>
            <param name="value">任意形式数据</param>
            <returns></returns>
        </member>
        <member name="M:rui.typeHelper.toDateTime(System.Object)">
            <summary>
            字符串转为时间（不合法返回当前时间)
            </summary>
            <param name="value">任意形式数据</param>
            <returns></returns>
        </member>
        <member name="M:rui.typeHelper.getTimeStamp(System.DateTime)">
            <summary>
            返回某个时间对应的时间戳
            </summary>
            <param name="time">时间值</param>
            <returns></returns>
        </member>
        <member name="M:rui.typeHelper.getWeekFirstDay(System.DateTime)">
            <summary>
            获取当前时间所在周周一的时间
            </summary>
            <param name="datetime">时间值</param>
            <returns></returns>
        </member>
        <member name="M:rui.typeHelper.getMonthStart(System.Object)">
            <summary>
            获取月份的开始时刻
            </summary>
            <param name="value">任意形式数据</param>
            <returns></returns>
        </member>
        <member name="M:rui.typeHelper.getMonthEnd(System.Object)">
            <summary>
            获取月份的结束时刻
            </summary>
            <param name="value">时间值</param>
            <returns></returns>
        </member>
        <member name="M:rui.typeHelper.getDayStart(System.Object)">
            <summary>
            返回某天的开始时刻
            </summary>
            <param name="value">时间值</param>
            <returns></returns>
        </member>
        <member name="M:rui.typeHelper.getDayEnd(System.Object)">
            <summary>
            返回某天的结束时刻
            </summary>
            <param name="value">时间值</param>
            <returns></returns>
        </member>
        <member name="M:rui.typeHelper.getHourShow(System.Object)">
            <summary>
            把分钟转换为小时显示
            32分钟
            1小时20分钟
            </summary>
            <param name="value">整数值</param>
            <returns></returns>
        </member>
        <member name="M:rui.typeHelper.toString(System.Object)">
            <summary>
            对象转字符串（null返回"")
            </summary>
            <param name="value">任意形式数据</param>
            <returns></returns>
        </member>
        <member name="M:rui.typeHelper.toStringAllowNull(System.Object)">
            <summary>
            对象转字符串（null返回null)
            </summary>
            <param name="value">任意形式数据</param>
            <returns></returns>
        </member>
        <member name="M:rui.typeHelper.toDecimal(System.Object)">
            <summary>
            对象转decimal，非法返回0
            </summary>
            <param name="value">任意形式数据</param>
            <returns></returns>
        </member>
        <member name="M:rui.typeHelper.toDecimalAllowNull(System.Object)">
            <summary>
            对象转decimal，非法返回null
            </summary>
            <param name="value">任意形式数据</param>
            <returns></returns>
        </member>
        <member name="M:rui.typeHelper.toDouble(System.Object)">
            <summary>
            对象转double,非法返回0
            </summary>
            <param name="value">任意形式数据</param>
            <returns></returns>
        </member>
        <member name="M:rui.typeHelper.toDoubleAllowNull(System.Object)">
            <summary>
            对象转double，非法返回null
            </summary>
            <param name="value">任意形式数据</param>
            <returns></returns>
        </member>
        <member name="M:rui.typeHelper.toBoolean(System.Object)">
            <summary>
            对象转布尔，非法返回false
            </summary>
            <param name="value">任意形式数据</param>
            <returns></returns>
        </member>
        <member name="M:rui.typeHelper.toInt(System.Object)">
            <summary>
            对象转整数，非法返回0
            </summary>
            <param name="value">任意形式数据</param>
            <returns></returns>
        </member>
        <member name="M:rui.typeHelper.toIntAllowNull(System.Object)">
            <summary>
            对象转整数，非法返回null
            </summary>
            <param name="value">任意形式数据</param>
            <returns></returns>
        </member>
        <member name="M:rui.typeHelper.toLong(System.Object)">
            <summary>
            对象转长整数，非法返回0
            </summary>
            <param name="value">任意形式数据</param>
            <returns></returns>
        </member>
        <member name="M:rui.typeHelper.toLongAllowNull(System.Object)">
            <summary>
            对象转长整数，非法返回0
            </summary>
            <param name="value">任意形式数据</param>
            <returns></returns>
        </member>
        <member name="M:rui.typeHelper.removeZero(System.Object,System.Boolean)">
            <summary>
            去除浮点数后边的多余0: 
            0.95000返回0.95;
            </summary>
            <param name="value">浮点数</param>
            <param name="returnEmptyStr">如果是0值，是否返回空串</param>
            <returns></returns>
        </member>
        <member name="M:rui.typeHelper.va四舍五入(System.Object,System.Int32)">
            <summary>
            四舍五入 - 小数位数
            </summary>
            <param name="value">数值</param>
            <param name="length">小数保留位数</param>
            <returns></returns>
        </member>
        <member name="M:rui.typeHelper.va四舍五入(System.Object)">
            <summary>
            四舍五入为整数
            </summary>
            <param name="value">浮点数</param>
            <returns></returns>
        </member>
        <member name="M:rui.typeHelper.va小数位(System.Decimal,System.Int32)">
            <summary>
            返回指定小数位的展示字符串
            </summary>
            <param name="value">浮点数</param>
            <param name="length">保留的小数位数</param>
            <returns></returns>
        </member>
        <member name="M:rui.typeHelper.toPercent(System.Object)">
            <summary>
            小数转百分比
            0.1 转为 10%
            </summary>
            <param name="value">浮点数</param>
            <returns></returns>
        </member>
        <member name="M:rui.typeHelper.isNullOrEmpty(System.Object)">
            <summary>
            判断是否null或者空串
            </summary>
            <param name="value">任意形式数据</param>
            <returns></returns>
        </member>
        <member name="M:rui.typeHelper.isNullOrEmpty(System.Object,System.String)">
            <summary>
            检查是否空对象，如果是，则抛出异常
            </summary>
            <param name="value">任意形式数据</param>
            <param name="msg">为空时抛出的错误</param>
        </member>
        <member name="M:rui.typeHelper.isNotNullOrEmpty(System.Object)">
            <summary>
            判断是否不是null或者空串
            </summary>
            <param name="value">任意形式数据</param>
            <returns></returns>
        </member>
        <member name="M:rui.typeHelper.addInt(System.Object,System.Object)">
            <summary>
            累加整数
            </summary>
            <param name="val1">整数1</param>
            <param name="val2">整数2</param>
            <returns>累加后的值</returns>
        </member>
        <member name="M:rui.typeHelper.subInt(System.Object,System.Object)">
            <summary>
            累减整数
            </summary>
            <param name="val1">整数1</param>
            <param name="val2">整数2</param>
            <returns>累减后的值</returns>
        </member>
        <member name="M:rui.typeHelper.addDecimal(System.Object,System.Object)">
            <summary>
            累加浮点数
            </summary>
            <param name="val1">浮点数1</param>
            <param name="val2">浮点数2</param>
            <returns>累加后的浮点数</returns>
        </member>
        <member name="M:rui.typeHelper.subDecimal(System.Object,System.Object)">
            <summary>
            累减浮点数
            </summary>
            <param name="val1">浮点数1</param>
            <param name="val2">浮点数2</param>
            <returns>累减后的浮点数</returns>
        </member>
        <member name="M:rui.typeHelper.divideValue(System.Object,System.Object)">
            <summary>
            数据相除
            </summary>
            <param name="val1">浮点数1</param>
            <param name="val2">浮点数2</param>
            <returns>相除的结果,被除数为0则返回0</returns>
        </member>
        <member name="M:rui.typeHelper.show折扣(System.Object)">
            <summary>
            显示折扣
            大于1显示无折扣
            0.01 显示 1折
            0.1 显示 10折
            </summary>
            <param name="value">浮点数</param>
            <returns></returns>
        </member>
        <member name="M:rui.typeHelper.get人民币(System.Object)">
            <summary>
            在数据后边加上“元”代码
            不合法数据返回0元
            10，返回10元
            </summary>
            <param name="value">数值</param>
            <returns></returns>
        </member>
        <member name="M:rui.typeHelper.get人民币分(System.Object)">
            <summary>
            获取元代表的分
            2.01 返回 201分
            </summary>
            <param name="value">元为单位数值</param>
            <returns></returns>
        </member>
        <member name="T:rui.zipHelper">
            <summary>
            文件压缩辅助类
            </summary>
        </member>
        <member name="M:rui.zipHelper.ZipDir(System.String,System.String,System.Int32)">
            <summary>
            压缩文件夹
            </summary>
            <param name="dirToZip">要压缩的文件夹</param>
            <param name="zipedFileName">压缩之后的文件名</param>
            <param name="compressionLevel">压缩率0（无压缩）9（压缩率最高）</param>
        </member>
        <member name="M:rui.zipHelper.GetAllFies(System.String)">
            <summary>  
            获取某个目录下所有的文件  
            </summary>  
            <returns></returns>  
        </member>
        <member name="M:rui.zipHelper.GetAllDirsFiles(System.Collections.Generic.IEnumerable{System.IO.DirectoryInfo},System.Collections.Hashtable)">
            <summary>  
            获取多个文件夹下的所有文件夹里的文件  
            </summary>  
            <param name="dirs">多个文件夹计划</param>  
            <param name="filesList">获取到的文件列表</param>  
        </member>
        <member name="M:rui.zipHelper.GetAllDirFiles(System.IO.DirectoryInfo,System.Collections.Hashtable)">
            <summary>  
            获取一个文件夹下的文件  
            </summary>  
            <param name="dir">目录名称</param>
            <param name="filesList">文件列表HastTable</param>  
        </member>
        <member name="M:rui.zipHelper.UnZip(System.String,System.String)">
            <summary>  
            功能：解压zip格式的文件。  
            </summary>  
            <param name="zipFilePath">压缩文件路径</param>  
            <param name="unZipDir">解压文件存放路径,为空时默认与压缩文件同一级目录下，跟压缩文件同名的文件夹</param>  
            <returns>解压是否成功</returns>  
        </member>
        <member name="M:rui.zipHelper.ZipFile(System.String,System.String,System.Int32)">
            <summary>
            压缩单个文件
            </summary>
            <param name="filePath">被压缩的文件名称(包含文件路径)，文件的全路径</param>
            <param name="zipedFileName">压缩后的文件名称(包含文件路径)，保存的文件名称</param>
            <param name="compressionLevel">压缩率0（无压缩）到 9（压缩率最高）</param>
        </member>
        <member name="M:rui.zipHelper.ZipFile(System.String,System.String)">
            <summary> 
            压缩单个文件 
            </summary> 
            <param name="fileToZip">要进行压缩的文件名，全路径</param> 
            <param name="zipedFile">压缩后生成的压缩文件名,全路径</param> 
        </member>
        <member name="M:rui.zipHelper.ZipManyFilesOrDictorys(System.Collections.Generic.IEnumerable{System.String},System.String,System.String)">
            <summary>
            压缩多个目录或文件
            </summary>
            <param name="folderOrFileList">待压缩的文件夹或者文件，全路径格式,是一个集合</param>
            <param name="zipedFile">压缩后的文件名，全路径格式</param>
            <param name="password">压宿密码</param>
            <returns></returns>
        </member>
        <member name="M:rui.zipHelper.ZipFileWithStream(System.String,ICSharpCode.SharpZipLib.Zip.ZipOutputStream)">
            <summary>
            带压缩流压缩单个文件
            </summary>
            <param name="fileToZip">要进行压缩的文件名</param>
            <param name="zipStream"></param>
            <returns></returns>
        </member>
        <member name="M:rui.zipHelper.ZipFileDictory(System.String,ICSharpCode.SharpZipLib.Zip.ZipOutputStream,System.String)">
            <summary>
            递归压缩文件夹方法
            </summary>
            <param name="folderToZip"></param>
            <param name="s"></param>
            <param name="parentFolderName"></param>
        </member>
        <member name="T:System.Web.Mvc.Html.HtmlExtensions">
            <summary>
            HTML辅助方法的扩展
            </summary>
        </member>
        <member name="M:System.Web.Mvc.Html.HtmlExtensions.TextBoxDateFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
            <summary>
            日期录入文本框 
            </summary>
            <typeparam name="TModel"></typeparam>
            <typeparam name="TProperty"></typeparam>
            <param name="helper"></param>
            <param name="expression"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.HtmlExtensions.TextBoxDate(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
            <summary>
            日期录入文本框
            </summary>
            <param name="helper"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.HtmlExtensions.DisplayDateFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Boolean)">
            <summary>
            显示日期字段值
            </summary>
            <typeparam name="TModel"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="helper"></param>
            <param name="expression"></param>
            <param name="isLang">是否长日期格式</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.HtmlExtensions.DisplayImgFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
            <summary>
            展示图片
            </summary>
            <typeparam name="TModel"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="helper"></param>
            <param name="expression"></param>
            <param name="noImgShow">无图片展示的文本提示</param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.HtmlExtensions.DropDownListMulFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
            <summary>
            多选下拉框
            </summary>
            <typeparam name="TModel"></typeparam>
            <typeparam name="TProperty"></typeparam>
            <param name="helper"></param>
            <param name="expression"></param>
            <param name="selectList"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.HtmlExtensions.DropDownListMul(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object,System.Object)">
            <summary>
            多选下拉框
            </summary>
            <param name="helper"></param>
            <param name="name"></param>
            <param name="selectList"></param>
            <param name="value">选中值,分割</param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.HtmlExtensions.RadioButtonListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object,System.Boolean)">
            <summary>
            单选列表
            </summary>
            <typeparam name="TModel"></typeparam>
            <typeparam name="TProperty"></typeparam>
            <param name="helper"></param>
            <param name="expression"></param>
            <param name="selectList"></param>
            <param name="htmlAttributes"></param>
            <param name="isHorizon"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.HtmlExtensions.RadioButtonList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object,System.Boolean)">
            <summary>
            单选列表
            </summary>
            <param name="helper"></param>
            <param name="name"></param>
            <param name="selectList"></param>
            <param name="htmlAttributes"></param>
            <param name="isHorizon"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.HtmlExtensions.CheckBoxListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object,System.Boolean)">
            <summary>
            复选列表
            </summary>
            <typeparam name="TModel"></typeparam>
            <typeparam name="TProperty"></typeparam>
            <param name="helper"></param>
            <param name="expression"></param>
            <param name="selectList"></param>
            <param name="htmlAttributes"></param>
            <param name="isHorizon"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.HtmlExtensions.CheckBoxList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object,System.Boolean)">
            <summary>
            复选列表
            </summary>
            <param name="helper"></param>
            <param name="name">标记名称</param>
            <param name="selectList">列表项</param>
            <param name="htmlAttributes">html属性</param>
            <param name="isHorizon">排列方式</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.HtmlExtensions.CheckBoxListPriv(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
            <summary>
            
            </summary>
            <param name="helper"></param>
            <param name="name">标记名称</param>
            <param name="allowOperations">允许出现的项目</param>
            <param name="haveOperations">已选中的项目</param>
            <param name="allOperations">所有的列表项信息,用来获取操作名称的</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.HtmlExtensions.orderColumn(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
            <summary>
            在th中根据排序方向生成排序列的展示标记
            </summary>
            <param name="helper"></param>
            <param name="orderField"></param>
            <param name="orderWay"></param>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
    </members>
</doc>
